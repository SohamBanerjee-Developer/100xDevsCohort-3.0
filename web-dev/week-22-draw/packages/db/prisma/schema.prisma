// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
 id               String    @id   @default(uuid())//alternative to integer default
 username         String
 email            String
 password         String
 photo            String
 rooms            Room[]
 chats            Chat[]
}
//User can have multiple Rooms and Room can have multiple Admins -> one to many relationship 
model Room{
  id              Int        @id    @default(autoincrement())
  slug            String     @unique
  createdAt       DateTime   @default(now())
  adminId         String
  chats           Chat[]
  admin           User      @relation(fields: [adminId], references: [id])//defing arelationship one to many
}

model Chat{
  id              Int         @id     @default(autoincrement())// it should be string will help fetching chats in order
  message         String      
  roomId          Int
  userId          String
  room            Room        @relation(fields: [roomId], references: [id])//defing arelationship one to many
  user            User        @relation(fields: [userId], references: [id])//defing arelationship one to many
}
